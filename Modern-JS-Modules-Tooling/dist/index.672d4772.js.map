{"mappings":"AAAA,mBAAmB;AACnB,0EAA0E;AAC1E,yBAAyB;AACzB,0BAA0B;AAE1B,OAAO,CAAC,GAAG,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC;AAEhC,qDAAqD;AACrD,sCAAsC;AACtC,wCAAwC;AAExC,8CAA8C;AAC9C,+EAA+E;AAC/E,sBAAsB;AAEtB,iDAAiD;AACjD,mBAAmB;AACnB,mBAAmB;AACnB,oBAAoB;AAEpB,qBAAqB;AAErB,MAAM,aAAa,GAAG,AAAC,WAAY;IACjC,MAAM,IAAI,GAAG,EAAE,AAAC;IAChB,MAAM,YAAY,GAAG,EAAE,AAAC;IACxB,MAAM,UAAU,GAAG,GAAG,AAAC;IACvB,MAAM,aAAa,GAAG,EAAE,AAAC;IACzB,MAAM,SAAS,GAAG,SAAU,OAAO,EAAE,QAAQ,EAAE;QAC7C,IAAI,CAAC,IAAI,CAAC;YAAE,OAAO;YAAE,QAAQ;SAAE,CAAC,CAAC;QACjC,OAAO,CAAC,GAAG,CACT,CAAC,EAAE,QAAQ,CAAC,CAAC,EAAE,OAAO,CAAC,gCAAgC,EAAE,YAAY,CAAC,CAAC,CAAC,CACzE,CAAC;KACH,AAAC;IAEF,MAAM,UAAU,GAAG,SAAU,OAAO,EAAE,QAAQ,EAAE;QAC9C,OAAO,CAAC,GAAG,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,EAAE,OAAO,CAAC,oBAAoB,CAAC,CAAC,CAAC;KAC3D,AAAC;IACF,OAAO;QACL,SAAS;QACT,IAAI;QACJ,UAAU;QACV,aAAa;KACd,CAAC;CACH,EAAG,AAAC;AAEL,aAAa,CAAC,SAAS,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC;AACpC,aAAa,CAAC,SAAS,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC;AACpC,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;AAC3B,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC;AAExC,+CAA+C;AAC/C,YAAY;AACZ,QAAQ;AACR,kDAAkD;AAClD,wCAAwC;AACxC,mBAAmB;AACnB,iFAAiF;AACjF,SAAS;AACT,OAAO;AAEP,cAAc;AACd,iDAAiD;AAEjD,uCAAuC;AACvC,sCAAsC;AACtC,mBAAmB;AAEnB,6BAA6B;AAE7B,MAAM,KAAK,GAAG;IACZ,IAAI,EAAE;QACJ;YAAE,OAAO,EAAE,OAAO;YAAE,QAAQ,EAAE,CAAC;SAAE;QACjC;YAAE,OAAO,EAAE,CAAC,KAAK,CAAC;YAAE,QAAQ,EAAE,CAAC;SAAE;KAClC;IACD,IAAI,EAAE;QAAE,QAAQ,EAAE,IAAI;KAAE;CACzB,AAAC;AACF,MAAM,UAAU,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,KAAK,CAAC,AAAC;AAC5C,2CAA2C;AAC3C,KAAK,CAAC,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;AAE5B,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;AACxB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;AACnB,+BAA+B;AAE/B,oBAAoB;AACpB,yBAAyB;AACzB,IAAI;AAEJ,MAAM,MAAM;IACV,CAAC,QAAQ,GAAG,CAAC,GAAG,CAAC,CAAC;IAClB,YAAY,IAAI,CAAE;QAChB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,OAAO,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,QAAQ,CAAC,EAAE,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;KAChD;CACF;AACD,MAAM,GAAG,GAAG,IAAI,MAAM,CAAC,CAAC,MAAM,CAAC,CAAC,AAAC","sources":["script.js"],"sourcesContent":["// importing module\r\n// import { addToCart, totalPrice as price, qt } from './shoppingCart.js';\r\n// addToCart(`bread`, 5);\r\n// console.log(price, qt);\r\n\r\nconsole.log(`importing module`);\r\n\r\n// import * as shoppingCart from './shoppingCart.js';\r\n// shoppingCart.addToCart(`bread`, 5);\r\n// console.log(shoppingCart.totalPrice);\r\n\r\n// dont use default and named export like this\r\n// import add, { addToCart, totalPrice as price, qt } from './shoppingCart.js';\r\n// console.log(price);\r\n\r\n// import add, { cart } from './shoppingCart.js';\r\n// add(`pizza`, 2);\r\n// add(`bread`, 5);\r\n// add(`apples`, 4);\r\n\r\n// console.log(cart);\r\n\r\nconst shoppingCart2 = (function () {\r\n  const cart = [];\r\n  const shippingCost = 10;\r\n  const totalPrice = 237;\r\n  const totalQuantity = 23;\r\n  const addToCart = function (product, quantity) {\r\n    cart.push({ product, quantity });\r\n    console.log(\r\n      `${quantity} ${product} added to cart (sipping cost is ${shippingCost})`\r\n    );\r\n  };\r\n\r\n  const orderStock = function (product, quantity) {\r\n    console.log(`${quantity} ${product} order from supplier`);\r\n  };\r\n  return {\r\n    addToCart,\r\n    cart,\r\n    totalPrice,\r\n    totalQuantity,\r\n  };\r\n})();\r\n\r\nshoppingCart2.addToCart(`apple`, 4);\r\nshoppingCart2.addToCart(`pizza`, 2);\r\nconsole.log(shoppingCart2);\r\nconsole.log(shoppingCart2.shippingCost);\r\n\r\n///////////////////////////////////////////////\r\n// COMMON JS\r\n//export\r\n// export.addToCart=function (product, quantity) {\r\n//     cart.push({ product, quantity });\r\n//     console.log(\r\n//       `${quantity} ${product} added to cart (sipping cost is ${shippingCost})`\r\n//     );\r\n//   };\r\n\r\n// //   import\r\n// const {addToCart}=require('./shoppingCart.js')\r\n\r\n///////////////////////////////////////\r\n//////////////////////////////////////\r\n// creating a clone\r\n\r\n// import cloneDeep=from './'\r\n\r\nconst state = {\r\n  cart: [\r\n    { product: 'bread', quantity: 5 },\r\n    { product: `pizza`, quantity: 4 },\r\n  ],\r\n  user: { loggedIn: true },\r\n};\r\nconst stateClone = Object.assign({}, state);\r\n// const stateDeepClone = cloneDeep(state);\r\nstate.user.loggedIn = false;\r\n\r\nconsole.log(stateClone);\r\nconsole.log(state);\r\n// console.log(stateDeepClone);\r\n\r\n// if (module.hot) {\r\n//   module.hot.accept();\r\n// }\r\n\r\nclass person {\r\n  #greeting = `Hey`;\r\n  constructor(name) {\r\n    this.name = name;\r\n    console.log(`${this.#greeting}, ${this.name}`);\r\n  }\r\n}\r\nconst frk = new person(`farouk`);\r\n"],"names":[],"version":3,"file":"index.672d4772.js.map","sourceRoot":"/__parcel_source_root/"}